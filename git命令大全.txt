git 命令大全


--------------------------------------------------------------------------------------------------------------
-- 管理修改

git add filename  将指定文件的修改提交到暂存区

git add . （当前目录下所有文件）将修改提交到暂存区

git commit -m "备注"  提交更改,实际就是把暂存区的所有内容提交到当前分支

git status 查看当前状态

git reset --hard HEAD^  恢复上一版本 （HEAD^^ 上上一次版本  依次类推）

git reset --hard commit_id  根据版本号恢复历史版本

git reflog  查看历史命令

git log  查看历史

git checkout -- filename  将指定文件在工作区的修改全部撤销
有两种情况：1、一种是文件自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
          2、一种是文件已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态
          
git reset HEAD file  可以把暂存区的修改撤销掉（及撤销git add file动作）  

--------------------------------------------------------------------------------------------------------------
--远程仓库

git init  在当前目录创建git仓库

git clone msa@197.3.84.27:BPM  从远程服务器克隆代码

gitHub 远程仓库地址：https://github.com/git-lizj/git-lizj.git

git remote add origin git@github.com:git-lizj/git-lizj.git  把本地库与远程库关联
备注：添加后，远程库的名字就是origin，这是Git默认的叫法，也可以改成别的，但是origin这个名字一看就知道是远程库。

git push -u origin master  把当前分支master推送到远程
备注：由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，
还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。  

git push origin master    把本地master分支的最新修改推送至GitHub      


--------------------------------------------------------------------------------------------------------------
--分支管理

git branch  查看分支（当前分支前面标注有*）

git branch <name>  创建分支

git checkout <name>  切换分支

git checkout -b <name>  创建+切换分支

git merge <name> 合并某分支到当前分支  (Fast forward模式)

git merge --no-ff <name> -m "备注"  合并某分支到当前分支  (普通模式)

git branch -d <name> 删除分支

git log --graph  可查看分支合并图
